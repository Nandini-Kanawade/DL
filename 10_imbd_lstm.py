# -*- coding: utf-8 -*-
"""DL_Expt7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1j5GNaOvcJxDW1jFnAqHj8vFtB3Y_wcUl

Name: Nandini Kanawade

Roll No: UEC2021221

Class: E&Tc B BM2

Experiment 7: Sentiment analysis
"""

import numpy
import tensorflow as tf
from tensorflow import keras
from keras.models import Sequential
from keras.layers import Dense, LSTM, Embedding, Dropout
from keras.datasets import imdb
from keras.preprocessing import sequence

(X_train, y_train), (X_test,y_test) = imdb.load_data(num_words=5000)

X_train.shape

y_train.shape  # 1==positive 0==negative

X_test.shape

X_train[50]

from keras.utils import pad_sequences
max_review_length = 500
X_train = pad_sequences(X_train, maxlen=max_review_length)
X_test = pad_sequences(X_test, maxlen=max_review_length)

X_train[50]

# Create the model

embedding_vector = 32 #each word of 32 bit vector
model = Sequential()
model.add(Embedding(5000, embedding_vector, input_length=max_review_length))
model.add(LSTM(1))
model.add(Dense(1, activation='sigmoid'))
model.compile(optimizer='adam', loss='binary_crossentropy',  metrics=['accuracy'])

print(model.summary())

#5000 x 32 = 160000

 #4 = (32 × 4 × 100) + (100 × 4) = 53,200.

# 100x 1

model.fit(X_train, y_train, epochs=2, batch_size=64)

scores = model.evaluate(X_test, y_test, verbose=2)

print("Accuracy: %.2f%%" % (scores[1]*100))

